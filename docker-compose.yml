version: '3.8'

services:
  # Application API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/saas
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=angelo
      - SPRING_PROFILES_ACTIVE=dev
      - JWT_SECRET=devolutionSecretKeyForJwtSigningMustBeAtLeast32Chars
      - JWT_EXPIRATION=86400
    volumes:
      - ./:/app
    networks:
      - saas-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:16.2-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=angelo
      - POSTGRES_DB=saas
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - saas-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - saas-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@devolution.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - saas-network
    depends_on:
      - db
    restart: unless-stopped

networks:
  saas-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  pgadmin-data:
